/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-icon1 {
  background-image: url(sprite.png);
  background-position: 0px -68px;
  width: 83px;
  height: 67px;
}
.icon-icon1a {
  background-image: url(sprite.png);
  background-position: -83px -68px;
  width: 83px;
  height: 67px;
}
.icon-icon2 {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 89px;
  height: 68px;
}
.icon-icon2a {
  background-image: url(sprite.png);
  background-position: -89px 0px;
  width: 89px;
  height: 68px;
}
.icon-icon3 {
  background-image: url(sprite.png);
  background-position: 0px -135px;
  width: 75px;
  height: 67px;
}
.icon-icon3a {
  background-image: url(sprite.png);
  background-position: -75px -135px;
  width: 75px;
  height: 67px;
}
.icon-icon4 {
  background-image: url(sprite.png);
  background-position: -178px 0px;
  width: 79px;
  height: 67px;
}
.icon-icon4a {
  background-image: url(sprite.png);
  background-position: -178px -67px;
  width: 79px;
  height: 67px;
}
